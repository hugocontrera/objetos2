Object subclass: #Biblioteca	instanceVariableNames: 'socios exporter'	classVariableNames: ''	package: 'Biblioteca-Model'!!Biblioteca methodsFor: 'initialization' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!initialize	socios:= OrderedCollection new.	exporter:= VoorheesExporter new.! !!Biblioteca methodsFor: 'initialization' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!initialize: anExporter	socios:= OrderedCollection new.	exporter:= anExporter.! !!Biblioteca methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!socios: anObject	socios := anObject! !!Biblioteca methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!socios	^ socios! !!Biblioteca methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!exporter: anObject	exporter := anObject! !!Biblioteca methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!exporter	^ exporter! !!Biblioteca methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!exportarSocios"Retorna la representacion JSON de la coleccion de socios."^ self exporter export:(self socios).! !!Biblioteca methodsFor: 'socios' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!agregarSocio: aSocio 	socios add: aSocio.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Biblioteca class	instanceVariableNames: ''!!Biblioteca class methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!new: anExporter	^self new initialize: anExporter	! !Object subclass: #Exporter	instanceVariableNames: ''	classVariableNames: ''	package: 'Biblioteca-Model'!!Exporter methodsFor: 'exporting' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!export: socios	SubclassResponsibility ! !!Exporter methodsFor: 'exporting' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!exportSocio: aSocio	SubclassResponsibility ! !Exporter subclass: #NeoJSONExporter	instanceVariableNames: ''	classVariableNames: ''	package: 'Biblioteca-Model'!!NeoJSONExporter methodsFor: 'exporting' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!export: socios	| col |	col := SequenceableCollection new.	col := socios collect: [ :each | self exportSocio: each ].	^ NeoJSONWriter toStringPretty: col.! !!NeoJSONExporter methodsFor: 'exporting' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!exportSocio: aSocio	^ Dictionary new at: #nombre put: aSocio nombre; at: #email put: aSocio email; at:#legajo put: aSocio legajo; yourself.! !Object subclass: #Socio	instanceVariableNames: 'nombre email legajo'	classVariableNames: ''	package: 'Biblioteca-Model'!!Socio methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!nombre	^ nombre! !!Socio methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!email	^ email! !!Socio methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!email: anObject	email := anObject! !!Socio methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!nombre: anObject	nombre := anObject! !!Socio methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!legajo	^ legajo! !!Socio methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!legajo: anObject	legajo := anObject! !!Socio methodsFor: 'initialization' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!nombre: aString email: aString2 legajo: aString3 	nombre:= aString.	email:= aString2.	legajo:= aString3.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Socio class	instanceVariableNames: ''!!Socio class methodsFor: 'creation' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!nombre: aString email: aString2 legajo: aString3 	^self new nombre: aString email: aString2 legajo: aString3 ! !Exporter subclass: #VoorheesExporter	instanceVariableNames: ''	classVariableNames: ''	package: 'Biblioteca-Model'!!VoorheesExporter methodsFor: 'exporting' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!export: socios 		| exportedString |		exportedString := '[', Character cr asString, 	(self exportSocio: socios first). 	socios allButFirst do: [ :socio | 		exportedString := exportedString, ',', Character cr asString, (self exportSocio: socio).			].		^exportedString,Character cr asString,']'.! !!VoorheesExporter methodsFor: 'exporting' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!exportSocio: aSocio	^		'	{', Character cr asString,		'		"nombre" : "',aSocio nombre,'",',Character cr asString,		'		"email" : "',aSocio email,'",',Character cr asString,		'		"legajo" : "',aSocio legajo,'"',Character cr asString,		'	}'! !TestCase subclass: #BibliotecaTest	instanceVariableNames: 'biblioteca exporterJson socio1 socio2 socio3'	classVariableNames: ''	package: 'Biblioteca-Tests'!!BibliotecaTest methodsFor: 'running' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!setUp	biblioteca := Biblioteca new.	exporterJson := NeoJSONExporter new.	biblioteca initialize: exporterJson.	socio1 := Socio nombre: 'Maria' email: 'maria@biblo.com' legajo: '1/3'. 	socio2 := Socio nombre: 'Juan' email: 'juan@biblo.com' legajo: '2/3'. 	socio3 := Socio nombre: 'Pedro' email: 'pedro@biblo.com' legajo: '3/3'. ! !!BibliotecaTest methodsFor: 'running' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!testAgregarSocio	biblioteca agregarSocio: socio1.	biblioteca agregarSocio: socio2.	biblioteca agregarSocio: socio3.	self assert: (biblioteca socios size) equals: 3.	self assert: (biblioteca socios includes: socio1).	! !TestCase subclass: #ExporterTest	instanceVariableNames: 'arya tyron socios'	classVariableNames: ''	package: 'Biblioteca-Tests'!!ExporterTest methodsFor: 'running' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!setUp	arya:= Socio nombre:'Arya Stark' email:'needle@stark.com' legajo: '5234/5'.	tyron:= Socio nombre:'Tyron Lannister' email:'tyron@thelannisters.com' legajo:'2345/2'.	socios := OrderedCollection new.	socios add: arya.	socios add: tyron.! !!ExporterTest methodsFor: 'tests' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!testExportSocio	| jsonExporter dict|	jsonExporter := NeoJSONExporter new.	dict := jsonExporter exportSocio: arya.	self assert: (dict at:'email') equals: arya email.	self assert: (dict at:'nombre') equals: arya nombre.	self assert: (dict at:'legajo') equals: arya legajo.! !!ExporterTest methodsFor: 'tests' stamp: 'MariaNoelAdrogueBenas 6/1/2020 21:34'!testExport|string jsonExporter|jsonExporter := NeoJSONExporter new.string := jsonExporter export: socios.self assert: string equals: '[	{		"legajo" : "5234/5",		"email" : "needle@stark.com",		"nombre" : "Arya Stark"	},	{		"legajo" : "2345/2",		"email" : "tyron@thelannisters.com",		"nombre" : "Tyron Lannister"	}]'	! !TestCase subclass: #SocioTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Biblioteca-Tests'!