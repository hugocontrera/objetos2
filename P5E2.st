Object subclass: #Conexion	instanceVariableNames: ''	classVariableNames: ''	package: 'P5E2-Model'!!Conexion methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:29'!enviar: unMensaje  ^unMensaje! !!Conexion methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:52'!cambiarAAlgoritmo: unAlgoritmoDeEncriptacion ! !Conexion subclass: #ConexionSegura	instanceVariableNames: 'encriptador'	classVariableNames: ''	package: 'P5E2-Model'!!ConexionSegura methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:20'!enviar: unMensaje	|mensajeEncriptado|	mensajeEncriptado := ((self encriptador) encriptar: unMensaje).	^(super enviar: mensajeEncriptado).! !!ConexionSegura methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:33'!cambiarAAlgoritmo: unAlgoritmoDeEncriptacion	encriptador algoritmo: unAlgoritmoDeEncriptacion ! !!ConexionSegura methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:17'!encriptador	^encriptador! !!ConexionSegura methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:58'!encriptador: unEncriptador	encriptador := unEncriptador ! !!ConexionSegura methodsFor: 'initialization' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:36'!initialize 	encriptador := Encriptador new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ConexionSegura class	instanceVariableNames: ''!!ConexionSegura class methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:03'!conAlgoritmo: unAlgoritmo 	|conexion|	conexion := self new.	conexion encriptador: (Encriptador conAlgoritmo: unAlgoritmo).	^conexion! !Object subclass: #Encriptador	instanceVariableNames: 'algoritmo'	classVariableNames: ''	package: 'P5E2-Model'!!Encriptador methodsFor: 'initialization' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:45'!initialize 	algoritmo := EncriptacionRSA new.! !!Encriptador methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:20'!algoritmo: unAlgoritmo	algoritmo := unAlgoritmo ! !!Encriptador methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:20'!algoritmo	^algoritmo! !!Encriptador methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:17'!encriptar: unMensaje 		^((self algoritmo) encriptar: unMensaje).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Encriptador class	instanceVariableNames: ''!!Encriptador class methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:59'!conAlgoritmo: unAlgoritmo	|encriptador|	encriptador := self new.	encriptador algoritmo: unAlgoritmo.	^encriptador! !Object subclass: #EstrategiaEncriptacion	instanceVariableNames: ''	classVariableNames: ''	package: 'P5E2-Model'!!EstrategiaEncriptacion methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:21'!encriptar: unMensaje 	SubclassResponsibility 	! !EstrategiaEncriptacion subclass: #EncriptacionBlowfish	instanceVariableNames: ''	classVariableNames: ''	package: 'P5E2-Model'!!EncriptacionBlowfish methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:49'!encriptar: unMensaje 	^('Mensaje encriptado con Blowfish (',unMensaje,')')! !EstrategiaEncriptacion subclass: #EncriptacionRC4	instanceVariableNames: ''	classVariableNames: ''	package: 'P5E2-Model'!!EncriptacionRC4 methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:49'!encriptar: unMensaje 	^('Mensaje encriptado con RC4 (',unMensaje,')')! !EstrategiaEncriptacion subclass: #EncriptacionRSA	instanceVariableNames: ''	classVariableNames: ''	package: 'P5E2-Model'!!EncriptacionRSA methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:48'!encriptar: unMensaje 	^('Mensaje encriptado con RSA (',unMensaje,')')! !Object subclass: #Mensajero	instanceVariableNames: 'conexion'	classVariableNames: ''	package: 'P5E2-Model'!!Mensajero methodsFor: 'initialization' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:03'!initialize 	conexion := Conexion new.! !!Mensajero methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:16'!enviar: unMensaje	^(conexion enviar: unMensaje).! !!Mensajero methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 05:51'!cambiarAlgoritmoDeEncriptacionA: unAlgoritmoDeEncriptacion 	conexion cambiarAAlgoritmo: unAlgoritmoDeEncriptacion ! !!Mensajero methodsFor: 'accessing' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:00'!conexion: unaConexion	conexion := unaConexion ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Mensajero class	instanceVariableNames: ''!!Mensajero class methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:03'!conEncriptacion: unAlgoritmoDeEncriptacion 			|mensajero|	mensajero := self new.	mensajero conexion: (ConexionSegura conAlgoritmo: unAlgoritmoDeEncriptacion).	^mensajero! !TestCase subclass: #TestMensajero	instanceVariableNames: 'mensajero1 mensajero2 mensajero3'	classVariableNames: ''	package: 'P5E2-Tests'!!TestMensajero methodsFor: 'running' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:13'!setUp	mensajero1 := Mensajero conEncriptacion: (EncriptacionRSA new). 	mensajero2 := Mensajero conEncriptacion: (EncriptacionRC4 new). 	mensajero3 := Mensajero conEncriptacion: (EncriptacionBlowfish new). ! !!TestMensajero methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:21'!testEnviar	self assert: (mensajero1 enviar: 'Test mensaje') equals: 'Mensaje encriptado con RSA (Test mensaje)'.	self assert: (mensajero2 enviar: 'Test mensaje') equals: 'Mensaje encriptado con RC4 (Test mensaje)'.	self assert: (mensajero3 enviar: 'Test mensaje') equals: 'Mensaje encriptado con Blowfish (Test mensaje)'.! !!TestMensajero methodsFor: 'as yet unclassified' stamp: 'MariaNoelAdrogueBenas 6/12/2020 06:21'!testCambiarAlgoritmoDeEncriptacionA	self assert: (mensajero1 enviar: 'Test mensaje') equals: 'Mensaje encriptado con RSA (Test mensaje)'.	mensajero1 cambiarAlgoritmoDeEncriptacionA: (EncriptacionRC4 new).	self assert: (mensajero1 enviar: 'Test mensaje') equals: 'Mensaje encriptado con RC4 (Test mensaje)'.	mensajero1 cambiarAlgoritmoDeEncriptacionA: (EncriptacionBlowfish new).	self assert: (mensajero1 enviar: 'Test mensaje') equals: 'Mensaje encriptado con Blowfish (Test mensaje)'.! !